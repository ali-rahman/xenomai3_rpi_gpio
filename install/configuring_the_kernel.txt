

 Sometimes you get instructions to set enable or disable some kernel config
 option in a kernel build.
   
   eg. for xenomai
        https://gitlab.denx.de/Xenomai/xenomai/wikis/Configuring_For_X86_Based_Dual_Kernels
       says  
        CONFIG_CPU_FREQ - Disable

 However how to set these config options?
   
    Don't edit .config directly!!
        It is  adviced not to edit .config directly but instead use 'make menuconfig'.
        The reason is that are dependencies defined between options (in kconfig files)
        and these are upholded by the 'make menuconfig' tool. If you edit
        manually you could break these dependencies, and the compilation of the kernel
        may fail because of this dependency breakage.
  
    Either :
     * configure via the menu with 'make menuconfig'
     * configure using the script: 'scripts/config'

 Set config option with 'make menuconfig'

    How to translate a config option to a menu item?
    Answer:
          In 'make menuconfig' you can determine using search with '/' character
          for a config option and then the result shows you where in the menu
          the config option is!   

 Set config option with 'scripts/config':

    * enable config option
     ./scripts/config -e CONFIG_CPU_FREQ
    * disable config option
     ./scripts/config -d CONFIG_CPU_FREQ
    * enable a module 
     ./scripts/config -m CONFIG_CPU_FREQ
    * get value(state) of config option 
     ./scripts/config -s CONFIG_CPU_FREQ

 Remarks: 
   * you can ommit the "CONFIG_" prefix
   * you can configure multiple options in one command
   * after you changed options you have to run
     'make olddefconfig'  to fix all relations within config
     because scripts/config doesn't check the validity of the .config file.
     This is done at next time a make command is run. 

 example:  configure kernel for xenomai
     
    first make a default config
     $ make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- multi_v7_defconfig

    change config options with script
     $ scripts/config -d CPU_FREQ -d CPU_IDLE -d CMA -d COMPACTION -d KGDB \
               -e ARM_ATAG_DTB_COMPAT_CMDLINE_EXTEND \
               -e XENO_DRIVERS_GPIO -m XENO_DRIVERS_GPIO_BCM2835
   
    fix all relations within config
     $ make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- olddefconfig

    verify options are still set right
     $ scripts/config -s CPU_FREQ -s CPU_IDLE -s CMA -s COMPACTION -s KGDB \
               -s ARM_ATAG_DTB_COMPAT_CMDLINE_EXTEND \
               -s XENO_DRIVERS_GPIO -s XENO_DRIVERS_GPIO_BCM2835
     n
     n
     n
     n
     n
     y
     y
     m
    
     
   Note if you did something stupid like setting a config option as module which is not possible
   then 'make olddefconfig' will report this. => so closely look at its output!    
 

help info
----------
$ scripts/config -h
Manipulate options in a .config file from the command line.
Usage:
config options command ...
commands:
    --enable|-e option   Enable option
    --disable|-d option  Disable option
    --module|-m option   Turn option into a module
    --set-str option string
                         Set option to "string"
    --set-val option value
                         Set option to value
    --undefine|-u option Undefine option
    --state|-s option    Print state of option (n,y,m,undef)

    --enable-after|-E beforeopt option
                             Enable option directly after other option
    --disable-after|-D beforeopt option
                             Disable option directly after other option
    --module-after|-M beforeopt option
                             Turn option into module directly after other option

    commands can be repeated multiple times

options:
    --file config-file   .config file to change (default .config)
    --keep-case|-k       Keep next symbols' case (dont' upper-case it)

config doesn't check the validity of the .config file. This is done at next
make time.

By default, config will upper-case the given symbol. Use --keep-case to keep
the case of all following symbols unchanged.

config uses 'CONFIG_' as the default symbol prefix. Set the environment
variable CONFIG_ to the prefix to use. Eg.: CONFIG_="FOO_" config ...
