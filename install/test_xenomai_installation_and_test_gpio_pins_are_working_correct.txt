


test which rpi board

   cat /proc/device-tree/model
   cat /proc/device-tree/compatible
   
test xenomai
  - commands about info  xenomai is running


      You can check if xenomai is running by running the command:

          ls /proc/xenomai

      which version with

          cat /proc/xenomai/version
  
  - Testing the real-time system 
  
    note: this test is independent of gpio -> just tests cobalt kernel for latency

       First, become root
       
         $ sudo su - 
       
       the run the latency test:

         $ /usr/xenomai/bin/latency

       If the latency test succeeds, you should try next to run the xeno-test test in order to assess the worst-case
       latency of your system. Try:

          $ /usr/xenomai/bin/xeno-test --help

         e.g. run:

          $ /usr/xenomai/sbin/autotune
            # https://www.xenomai.org/documentation/xenomai-3/html/man1/autotune/
            # autotune is a utility to determine the best calibration values (aka gravity triplet) for the core clock timer.

          $ /usr/xenomai/bin/xeno-test
            # runs latency test with dohell running

 
        also see: 
        ./notes/interrupts/interrupt_latency_stress_cyclictext.txt
        ./notes/xenomai__cobalt_and_mercury__RT_PREEMPT.txt


test gpio pins

 
  - command checking gpio pins are up
  
      for using gpio pins you need to have  the  "xeno_gpio_bcm2835" module to be loaded,
      you can check this with

          lsmod
      
       if not loaded then load with 
       
          modprobe xeno_gpio_bcm2835
      

       then:
          $ls /dev/rtdm/pinctrl-bcm/
           -> lists gpio0 ... gpio53 


  - try simple basic programs to check what in GPIO is not working

     * hardware requirement: 
         for this check we need the electronic scheme 
         
              circuit/combined__button_toggles_led__output_driven_irq.png
         
         which is also sed and described in 
                
              http://www.cs.ru.nl/J.Hooman/DES/XenomaiExercises/Exercise-7.html
                   
     * linux gpio test example code: 

        The example code is in a github repository at:
        
           https://github.com/harcokuppens/xenomai3_rpi_gpio/tree/master/examples/linux/wiringpi_examples

        The easiest way to download this folder is with the subversion command:
        
          svn checkout https://github.com/harcokuppens/xenomai3_rpi_gpio.git/trunk/examples/linux/wiringpi_examples
          

        With the default raspbian kernel these examples work. 
        However with a xenomai patched kernel the linux based examples should also still work!

          cd wiringpi_examples/
          make
          ./blink                # test gpio output
          ./button_toggles_led   # press button to toggle led  , test both interrupt from button and  output
          ./output_driven_irq    # test both  gpio output and gpio interrupt (latter driven by feeding output line with voltage divider to an input port -> no switch needed, just blinking of led toggles also interrupt)

     * xenomai gpio test example code:  
       
       The example code is in a github repository at:
        
         https://github.com/harcokuppens/xenomai3_rpi_gpio/tree/master/examples/xenomai3/userspace_programs

       The easiest way to download this folder is with the subversion command:
        
          svn checkout https://github.com/harcokuppens/xenomai3_rpi_gpio.git/trunk/examples/xenomai3/userspace_programs
          
       These examples should only work with a xenomai3 patched linux kernel.    
       You also must have the rtdm driver for realtime driver support for gpio pins loaded:
       
          modprobe xeno_gpio_bcm2835
     
       We have the same examples as for linux but now in realtime mode:
       
         ./blink/                # test gpio output
         ./button_toggles_led/   # press button to toggle led  , test both interrupt from button and  output
         ./output_driven_irq/    # test both  gpio output and gpio interrupt (latter driven by feeding output line with voltage divider to an input port -> no switch needed, just blinking of led toggles also interrupt)
            
          
     * also look at http://www.cs.ru.nl/J.Hooman/DES/XenomaiExercises/Exercise-7.html
       and http://www.cs.ru.nl/J.Hooman/DES/XenomaiExercises/Exercise-9-2.html

               

          