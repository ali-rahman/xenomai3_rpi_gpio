xenomai 3 
===========

installations
------------

 - pi1 
     http://wiki.csie.ncku.edu.tw/embedded/xenomai#xenomai-3-on-raspberry-pi
       linux kernel version: 3.18.12 
       ipipe:  ipipe-core-3.18.12-arm-1.patch
       xenomai version : v3.0-rc4
       
       bcm patch : https://drive.google.com/file/d/0B6GwSked9fL9RnU3b3pSajFZbUk/view
       
        => does gpio tests with oscilloscoop(see below)
       
 - pi2 
      https://www.blaess.fr/christophe/2016/05/22/xenomai-3-sur-raspberry-pi-2/
       linux kernel version: rpi-4.1.y  
       ipipe:  pipe-core-4.1.18-arm-4.patch
       xenomai version : v3.0.2
       
       bcm patch : patch-xenomai-3-on-bcm-2709.patch    
               
    
       => only does test : latency       
       
        ==> however he claims works also with  GPIO  in his rpi3 story page (see below)    
                
 - pi3    
     http://wiki.csie.ncku.edu.tw/embedded/xenomai#xenomai-3-on-raspberry-pi-3 
       linux kernel version: rpi-4.1.y  
       ipipe:  pipe-core-4.1.18-arm-4.patch
       xenomai version : v3.0.2
       
       bcm patch : patch-xenomai-3-on-bcm-2709.patch     => same patched used by  blaess  for rpi2!!
       
       => does gpio tests, but I think not for rpi3 (see below)
       
       Uses : make bcm2709_defconfig
          make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- bcm2709_defconfig
         ----> note: no bcm2710_defconfig, instead use bcm2709_defconfig same as for rpi2
       
       note: configures xenomai build as :
               
        $ ./scripts/bootstrap --with-core=cobalt –enable-debug=partial
        $ ./configure CFLAGS="-march=armv7-a -mtune=cortex-a8 -mfloat-abi=hard -mfpu=neon -ffast-math" --host=arm-linux-gnueabihf --target=arm-linux-gnueabihf --enable-smp

       however 
          - cmdline options have no effect on ./scripts/bootstrap, they only apply for ./configure
          - but the options supply above to bootstrap   "--with-core=cobalt –enable-debug=partial" just happen 
            to set the options to their default values anyway, so they can be left out on ./configure
          - for ./configure options see
             * ./configure --help
             * http://xenomai.org/installing-xenomai-3-x/#_configuring
                   
       
     http://artteknika.hatenablog.com/entry/2016/08/23/143400         
       linux kernel version: rpi-4.1.y  
       ipipe:  pipe-core-4.1.18-arm-4.patch
       xenomai version : v3.0.2
       
       bcm patch : patch-xenomai-3-on-bcm-2709.patch => same patched used by  blaess  for rpi2!!
       
       note:
         When installing the created modules, Wifi module has been deleted. Since it is supposed to be 
         installed systematically, delete it once and install it again.

          $ sudo apt-get autoremove firmware-brcm80211
          $ sudo apt-get install firmware-brcm80211
       
       
       => only does test : latency
       
       
       note: configures xenomai build as :
        
          $ ./scripts/bootstrap
          $ ./configure CFLAGS="-march=armv7-a -mtune=cortex-a8 -mfloat-abi=hard -mfpu=neon -ffast-math" --enable-smp --with-core=cobalt
       
       
     https://www.blaess.fr/christophe/2017/03/20/xenomai-sur-raspberry-pi-3-bilan-mitige/
     
       => triggered by work http://artteknika.hatenablog.com/entry/2016/08/23/143400
     
       linux kernel version: rpi-4.1.y  
       ipipe: ipipe-core-4.1.18-arm-8.patch which is patched with
                 https://www.blaess.fr/christophe/files/article-2017-03-20/001-adapt-4.1.18-patch-to-rpi-4.1.21-kernel.patch
          
                   diff -urN a/kernel/cobalt/arch/arm/patches/ipipe-core-4.1.18-arm-8.patch b/kernel/cobalt/arch/arm/patches/ipipe-core-4.1.18-arm-8.patch
                   --- a/kernel/cobalt/arch/arm/patches/ipipe-core-4.1.18-arm-8.patch	2016-09-09 19:34:44.000000000 +0200
                   +++ b/kernel/cobalt/arch/arm/patches/ipipe-core-4.1.18-arm-8.patch	2017-03-18 06:43:42.062011519 +0100
                   @@ -63,7 +63,7 @@
                    @@ -1718,6 +1731,7 @@ config ALIGNMENT_TRAP
                     config UACCESS_WITH_MEMCPY
                     	bool "Use kernel mem{cpy,set}() for {copy_to,clear}_user()"
                   - 	depends on MMU
                   + 	depends on MMU && !CPU_SW_DOMAIN_PAN
                    +	depends on !IPIPE
                     	default y if CPU_FEROCEON
                     	help
                        
               =>NOTE:   ipipe-core-4.1.18-arm-9.patch              already includes above patch for ipipe-core-4.1.18-arm-8.patch 
                         `-> use this instead
                         
                         
       xenomai version : v3.0.3
       
       bcm patch : patch-xenomai-3-on-bcm-2709.patch     => same patched used by  blaess  for rpi2!!   
       
       
          => only does test : latency
             because :
             
               The result is a bit mixed: Xenomai works perfectly with good stability, 
               except for the management of GPIO interrupts which is not supported yet. 
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          
            Conclusion

                Xenomai 3.0.3 installs well on a Raspberry Pi 3. Timer management is accurate and has few latencies,
                even under heavy system load and interrupt.

                However, there is one very disappointing point: I have not managed to manage (with the RTDM API) the
                GPIO interrupt handlers . I guess the patch ipipe has not yet been adjusted for the Raspberry Pi 3. We
                will have to wait a little longer, I will continue to use Raspberry Pi 2 for the examples of my
                trainings on real time .                                  ^^^^^^^^^^^^^^
                                                                             `-> blaess claims  gpio with rtdm works for pi2!
                                                                                 => asked him for  rtdm gpio example which works!
                                                                             
                          
           http://pipeline.lbl.gov/code/3rd_party/licenses.win/util-linux-2.14.1/AUTHORS     
               Christophe Blaess <Christophe@Blaess.fr>   

              https://www.blaess.fr/=>  https://www.blaess.fr/christophe/





when creating image for rpi3b+ using raspbian/stretch: found following installation descriptions
---------------------------------------------------------------------------------------------------


https://github.com/claudioscordino/rpi3-xenomai

 => unclear which kernel source they used???


   Append to /boot/config.txt:

     device_tree=bcm2837-rpi-3-b.dtb
     kernel=kernel-xenomai.img

conclusion:    
 never did this install, because not complete! 
  
  
 
 
   
http://kth.diva-portal.org/smash/get/diva2:1251188/FULLTEXT01.pdf
   => uses vanilla kernal, (kernel.org) 
   => uses kernel.org's  default config for rpi  : multi_v7_defconfig
   => uses kernel.org's  kernel tree, patched by standard ipipe patch  => “bcm-2837-rpi-b-cobalt.dtb”
   
    Then the last step regarding the kernel was to set which device tree to be used. 
    
  ===>     The device tree was given by Xenomai, which was called “bcm-2837-rpi-b-cobalt.dtb”.    => hmmm, how does xenomai know the right device tree??
     
    It was added to “config.txt” inside the SD card boot partition. The device tree was set by writing “device tree=bcm2837-rpi-b-cobalt.dtb”.
   
 conclusion:
   did this install (see below), it did boot, however gpio numbers where very wrong, also different wrong as in his report
    in his report he said he patch pinctrl afterall  => not documented how??
    => did he ever tested the gpio ports??   In experiments he used my old image!
    
    

http://www.simplerobot.net/2018/06/rpi23-deploy-xenomai-kernel.html
 ==> uses rasbpian  kernel code github.com/raspberrypi/linux.git

 => source at https://github.com/thanhtam-h/rpi23-4.9.80-xeno3
   
   
 => I did  build myself : https://github.com/thanhtam-h/rpi23-4.9.80-xeno3/tree/master/scripts
    and did not:  install from prebuild binaries:  https://github.com/thanhtam-h/rpi23-4.9.80-xeno3/tree/master/prebuilt
   

   =====> lets raspbian bootcode decide the device tree to load!
   
   
   ==> uses patched ipipe : https://github.com/thanhtam-h/rpi23-4.9.80-xeno3/blob/master/scripts/ipipe-core-4.9.51-arm-4-for-4.9.80.patch
   

   
   
    => hmmm, ipipe-core-4.9.51-arm-4-for-4.9.80.patch patch is simular as mine for raspbian
         and his   pinctrl-bcm2835.c  patch in his ipipe-core-4.9.51-arm-4-for-4.9.80.patch file
         is the same a mine separate patch for this file. The only difference is that he 
         like the original ipipe patch for kernel.org  didn't patch
            spin_lock_init(&pc->irq_lock[i]);   => raw_spin_lock_init(&pc->irq_lock[i]);
         which the rpi 4.1 patch did, and my new rpi 4.9 patch also does
             
        So I think it should work.     
                 
     => I build it but it didn't boot, probably I did something wrong in the kernel installation
        That is unfortunate because otherwise I would have been done earlier!!
        However I learned a lot.
        
